name: Deployment pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ECR_REGISTRY: public.ecr.aws/t1m1t5z8
  ECS_SERVICE: gromits-service
  ECS_CLUSTER: gromits
  ECS_TASK_DEFINITION: .aws/task-definition.json
  POI_CONTAINER_NAME: gromits-poi_service
  WEBAPP_CONTAINER_NAME: gromits-webapp

defaults:
  run:
    shell: bash

jobs:
  build_images:
    name: Build and push images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug

      - name: Login to Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build, tag, and push webapp image to Amazon ECR
        uses: docker/build-push-action@v2
        with:
          context: ./web_app
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.WEBAPP_CONTAINER_NAME }}:${{ github.sha }}
          target: prod

      - name: Build, tag, and push POI service image to Amazon ECR
        uses: docker/build-push-action@v2
        with:
          context: ./poi_service
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.POI_CONTAINER_NAME }}:${{ github.sha }}
          target: prod

  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Fill in the web app image ID in the ECS task definition
        id: render-web-app-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.WEBAPP_CONTAINER_NAME }}
          image: ${{ env.ECR_REGISTRY }}/${{ env.WEBAPP_CONTAINER_NAME }}:${{ github.sha }}

      - name: Fill in the POI service image ID in the ECS task definition
        id: render-poi-service-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.render-web-app-container.outputs.task-definition }}
          container-name: ${{ env.POI_CONTAINER_NAME }}
          image: ${{ env.ECR_REGISTRY }}/${{ env.POI_CONTAINER_NAME }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-poir-service-container.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
