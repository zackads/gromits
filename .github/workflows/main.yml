name: Deployment pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build_webapp:
    name: Build Webapp
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web_app
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run build
      - run: npm run test

  deploy_webapp:
    name: Deploy Webapp
    needs: [build_webapp]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web_app
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-2
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - name: Refresh infrastructure
        run: terraform apply web_app/terraform -auto-approve -var-file=web_app/terraform/config.tfvars
      - name: Deploy to S3
        run: aws s3 sync build s3://gromits-webapp

  deploy_poi_service:
    name: Deploy POI Service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: poi_service
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.JS ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Serverless Deploy
        uses: serverless/github-action@master
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
