name: CI/CD pipeline
on:
  push:
    branches: [main]

jobs:
  build_service:
    name: Build the Service image and push to ECR
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Login to Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build, tag, and push image to ECR
        run: |
          docker build -t public.ecr.aws/t1m1t5z8/gromits:${{ github.sha }}-service ./buildings_service
          docker push public.ecr.aws/t1m1t5z8/gromits:${{ github.sha }}-service

  build_webapp:
    name: Build the Web app image and push to ECR
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Login to Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build, tag, and push image to ECR
        run: |
          docker build -t public.ecr.aws/t1m1t5z8/gromits:${{ github.sha }}-web_app ./web_app
          docker push public.ecr.aws/t1m1t5z8/gromits:${{ github.sha }}-web_app

  build_webapp:
    name: Build the Buildings DB image and push to ECR
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Login to Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build, tag, and push image to ECR
        run: |
          docker build -t public.ecr.aws/t1m1t5z8/gromits:${{ github.sha }}-web_app ./db
          docker push public.ecr.aws/t1m1t5z8/gromits:${{ github.sha }}-db